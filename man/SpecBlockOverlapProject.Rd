% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Speccp.R
\name{SpecBlockOverlapProject}
\alias{SpecBlockOverlapProject}
\title{Function of lag window estimate for projected spectral at a consecutive period this is for the refinement step}
\usage{
SpecBlockOverlapProject(
  y,
  L,
  R = floor(L^(1/3)),
  freq,
  band = rep(1, length(freq)),
  scale = TRUE,
  normaltrans = FALSE,
  coherency = FALSE,
  at = NULL,
  projections = NULL
)
}
\arguments{
\item{y}{the time series, multivariate (\eqn{T*m})}

\item{L}{the block size, a scalar \eqn{0<L<T}}

\item{R}{the bandwidth, a scalar \eqn{0<R<L} with default \eqn{R= floor(L^(1/3))}}

\item{freq}{the frequencies on which the spectral density will be estimated, can be specified due to expert knowledge or user interest}

\item{band}{an integer vector when frequency band average is implemented, indicating the number in each band. Specifically, the vector is of length \eqn{a} and sum to \eqn{b}, where \eqn{a} is the number of groups, and \eqn{b}  equals to length of freq. Default value means no band.}

\item{scale}{logical indicating whether marginal scale will be implemented before estimation}

\item{normaltrans}{logical indicating whether a marginal nonparametric normal transformation will be implemented before estimation}

\item{coherency}{logical indicating whether a coherency matrix, instead of a spectral matrix will be estimated. If TRUE,we scale the spectral matrix such that it has unit diagonal}

\item{at}{specifying the time points at which the spectral will be estimate, should be consecutive points, and the minimum is larger than \eqn{L}}

\item{projections}{a matrix of dim length(band) by m, which will project the spectral to a of 1 by 1 by freq (or band) by at tensor.}
}
\value{
returns the projected spectral estimate at \code{at}, which is a four-dimensional array, of 1 by 1 by freq (or band) by at
}
\description{
Function of lag window estimate for projected spectral at a consecutive period this is for the refinement step
}
\keyword{internal}
